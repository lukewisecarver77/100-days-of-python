MENU = {
    "espresso": {
        "ingredients": {
            "water": 50,
            "coffee": 18,
        },
        "cost": 1.5,
    },
    "latte": {
        "ingredients": {
            "water": 200,
            "milk": 150,
            "coffee": 24,
        },
        "cost": 2.5,
    },
    "cappuccino": {
        "ingredients": {
            "water": 250,
            "milk": 100,
            "coffee": 24,
        },
        "cost": 3.0,
    }
}

profit = 0
resources = {
    "water": 300,
    "milk": 200,
    "coffee": 100,
}


def coffee_choice():
    """Asks user for preferred coffee, espresso/latte/cappuccino"""
    coffee = input("What would you like? (espresso/latte/cappuccino)")
    return coffee


def resource_report(money):
    """Displays the current resources available in the coffee machine"""
    print(f'Water: {resources["water"]} ml')
    print(f'Milk: {resources["milk"]} ml')
    print(f'Coffee: {resources["coffee"]} g')
    print(f"Money: ${money}")


def sufficient_resources(order_ingredients):
    """When coffee is ordered, checks machine to see if enough resources are available"""
    for item in order_ingredients:
        if order_ingredients[item] > resources[item]:
            print(f"Sorry there is not enough {item}.")
            return False
        return True


def process_coins():
    """Counts entered coins"""
    total = 0
    print("Please insert coins.")
    total += int(input("How Many quarters?: ")) * .25
    total += int(input("How Many dimes?: ")) * .10
    total += int(input("How Many nickels?: ")) * .05
    total += int(input("How Many pennies?: ")) * .01
    return total


def transaction_successful(money_inserted, drink_cost):
    """Return true when payment accepted or false if unaccepted"""
    if money_inserted >= drink_cost:
        change = round(money_inserted - drink_cost, 2)
        print(f"Here is ${change} in change.")
        global profit
        profit += drink_cost
        return True
    else:
        print("Sorry that's not enough money. Money refunded.")
        return False


def make_coffee(drink, order_ingredients):
    """"Subtracts needed ingredients from the machine"""
    for item in order_ingredients:
        resources[item] -= order_ingredients[item]
    print(f"Here is your {drink}. Enjoy! ")


machine_on = True


while machine_on:
    choice = coffee_choice().lower()
    if choice == "off":
        print("Coffee Machine Off")
        machine_on = False
    elif choice == "report":
        resource_report(profit)
    else:
        drink = MENU[choice]
        if sufficient_resources(drink["ingredients"]):
            payment = process_coins()
            if transaction_successful(payment, drink["cost"]):
                make_coffee(choice, drink["ingredients"])


